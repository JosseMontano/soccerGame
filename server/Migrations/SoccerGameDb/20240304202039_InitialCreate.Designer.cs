// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using server.Models;

#nullable disable

namespace server.Migrations.SoccerGameDb
{
    [DbContext(typeof(SoccerGameDbContext))]
    [Migration("20240304202039_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("server.Models.Champeonship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Amountteams")
                        .HasColumnType("integer")
                        .HasColumnName("amountteams");

                    b.Property<DateOnly>("Dateend")
                        .HasColumnType("date")
                        .HasColumnName("dateend");

                    b.Property<DateOnly>("Datestart")
                        .HasColumnType("date")
                        .HasColumnName("datestart");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("name");

                    b.Property<int?>("Playerid")
                        .HasColumnType("integer")
                        .HasColumnName("playerid");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("champeonships_pkey");

                    b.HasIndex("Playerid");

                    b.ToTable("champeonships", (string)null);
                });

            modelBuilder.Entity("server.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Champeonshipid")
                        .HasColumnType("integer")
                        .HasColumnName("champeonshipid");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<int?>("Localteamid")
                        .HasColumnType("integer")
                        .HasColumnName("localteamid");

                    b.Property<int?>("Visitorteamid")
                        .HasColumnType("integer")
                        .HasColumnName("visitorteamid");

                    b.HasKey("Id")
                        .HasName("games_pkey");

                    b.HasIndex("Champeonshipid");

                    b.HasIndex("Localteamid");

                    b.HasIndex("Visitorteamid");

                    b.ToTable("games", (string)null);
                });

            modelBuilder.Entity("server.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("integer")
                        .HasColumnName("age");

                    b.Property<string>("Cellphone")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("cellphone");

                    b.Property<string>("Ci")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("ci");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<string>("Lastnames")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("lastnames");

                    b.Property<string>("Names")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("names");

                    b.Property<string>("Photo")
                        .HasColumnType("text")
                        .HasColumnName("photo");

                    b.Property<int?>("Teamid")
                        .HasColumnType("integer")
                        .HasColumnName("teamid");

                    b.HasKey("Id")
                        .HasName("players_pkey");

                    b.HasIndex("Teamid");

                    b.ToTable("players", (string)null);
                });

            modelBuilder.Entity("server.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("teams_pkey");

                    b.ToTable("teams", (string)null);
                });

            modelBuilder.Entity("server.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Gmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("server.Models.Champeonship", b =>
                {
                    b.HasOne("server.Models.Player", "Player")
                        .WithMany("Champeonships")
                        .HasForeignKey("Playerid")
                        .HasConstraintName("champeonships_playerid_fkey");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("server.Models.Game", b =>
                {
                    b.HasOne("server.Models.Champeonship", "Champeonship")
                        .WithMany("Games")
                        .HasForeignKey("Champeonshipid")
                        .HasConstraintName("games_champeonshipid_fkey");

                    b.HasOne("server.Models.Team", "Localteam")
                        .WithMany("GameLocalteams")
                        .HasForeignKey("Localteamid")
                        .HasConstraintName("games_localteamid_fkey");

                    b.HasOne("server.Models.Team", "Visitorteam")
                        .WithMany("GameVisitorteams")
                        .HasForeignKey("Visitorteamid")
                        .HasConstraintName("games_visitorteamid_fkey");

                    b.Navigation("Champeonship");

                    b.Navigation("Localteam");

                    b.Navigation("Visitorteam");
                });

            modelBuilder.Entity("server.Models.Player", b =>
                {
                    b.HasOne("server.Models.Team", "Team")
                        .WithMany("Players")
                        .HasForeignKey("Teamid")
                        .HasConstraintName("players_teamid_fkey");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("server.Models.Champeonship", b =>
                {
                    b.Navigation("Games");
                });

            modelBuilder.Entity("server.Models.Player", b =>
                {
                    b.Navigation("Champeonships");
                });

            modelBuilder.Entity("server.Models.Team", b =>
                {
                    b.Navigation("GameLocalteams");

                    b.Navigation("GameVisitorteams");

                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
